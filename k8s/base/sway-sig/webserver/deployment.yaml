---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: sway-sig
    app.kubernetes.io/name: sway-sig
  annotations:
    configmap.reloader.stakater.com/reload: "sway-sig-nginx-conf"
  name: sway-sig-nginx
  namespace: sway-sig
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: sway-sig
      app.kubernetes.io/name: sway-sig
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: sway-sig
        app.kubernetes.io/name: sway-sig
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: feature.node.kubernetes.io/custom-intel-10g
                operator: In
                values:
                - "true"
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sway-sig
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - sway-sig
              topologyKey: kubernetes.io/hostname
            weight: 100
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: nginx
          image: "docker.io/nginxinc/nginx-unprivileged:latest@sha256:bebc251cb344581d6fa310d3a5a3953becbf65a210a7e2460ba81b2f59280d48"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]
          resources:
            limits:
              memory: 512Mi
              cpu: 500m
            requests:
              cpu: 20m
              memory: 128Mi
          startupProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              readOnly: true
              name: data
              subPath: nginx
            - mountPath: /etc/nginx/conf.d
              readOnly: true
              name: nginx-conf
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: sway-nginx-v3
        - name: nginx-conf
          configMap:
            name: sway-sig-nginx-conf
