---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: netbox
  namespace: infra
  labels:
    component.kutara.io/part-of: standard-helm-release
spec:
  chart:
    spec:
      chart: netbox
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bootc-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: quay.io/tgenannt/netbox
      pullPolicy: IfNotPresent
      tag: "v3.2.5"
    superuser:
      name: admin
      email: hello@anthonyrabbito.com
    admins:
      - ["Anthony Rabbito", "hello@anthonyrabbito.com"]
    logging:
      disable_existing_loggers: false
      handlers:
        console:
          class: logging.StreamHandler
      loggers:
        netbox.authentication.*:
          handlers:
            - console
          level: DEBUG
      version: 1
    remoteAuth:
      enabled: True
      header: HTTP_X_AUTH_REQUEST_EMAIL
      groupHeader: HTTP_X_AUTH_REQUEST_GROUPS
      defaultPermissions: None
      groupSyncEnabled: True
      groupSeparator: ','
      autoCreateUser: True
      superuserGroups:
        - admins
      staffGroups:
        - family
    # plugins:
    #   - netbox_ddns
    # - napalm-vyos
    # - napalm_ros
    loginRequired: false
    storageBackend: storages.backends.s3boto3.S3Boto3Storage
    storageConfig:
      AWS_ACCESS_KEY_ID: "${SECRET_MINIO_ACCESS_KEY}"
      AWS_SECRET_ACCESS_KEY: "${SECRET_MINIO_SECRET_KEY}"
      AWS_STORAGE_BUCKET_NAME: "netbox"
      AWS_S3_ENDPOINT_URL: "https://s3.kutara.io"
    metricsEnabled: true
    napalm:
      username: "auto"
      args:
        key_file: /run/secrets/ssh-keys/id_rsa
    existingSecret: "netbox"
    postgresql:
      enabled: false
    redis:
      enabled: false
    tasksRedis:
      host: db-01.scr1.rabbito.tech
    cachingRedis:
      host: db-01.scr1.rabbito.tech
    externalDatabase:
      host: db-01.scr1.rabbito.tech
      port: 5432
      database: netbox
      username: k8s
      existingSecretName: "netbox"
      existingSecretKey: "db_password"
    persistence:
      enabled: false
    reportsPersistence:
      enabled: false
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        # TODO: https://github.com/kubernetes/ingress-nginx/issues/8401#issuecomment-1159590536
        nginx.ingress.kubernetes.io/custom-http-errors: 401,403,404,500,501,502,503
        nginx.ingress.kubernetes.io/auth-signin: https://auth.kutara.io/oauth2/start
        nginx.ingress.kubernetes.io/auth-url: https://auth.kutara.io/oauth2/auth?allowed_groups=admins,family
        nginx.ingress.kubernetes.io/auth-response-headers: Authorization, x-auth-request-groups, x-auth-request-email
        hajimari.io/icon: ip-network-outline
        hajimari.io/enable: "true"
      hosts:
        - host: netbox.kutara.io
          paths:
            - /
      tls:
        - secretName: netbox-tls
          hosts:
            - netbox.kutara.io
    init:
      image:
        repository: docker.io/library/busybox
        tag: 1.35.0
        pullPolicy: IfNotPresent
    updateStrategy:
      type: RollingUpdate
    worker:
      enabled: true
      nodeSelector:
        kubernetes.io/arch: amd64
      updateStrategy:
        type: RollingUpdate
    extraVolumeMounts:
      - name: ssh-keys
        mountPath: /run/secrets/ssh-keys
        readOnly: true
    extraVolumes:
      - name: ssh-keys
        secret:
          secretName: napalm-ssh
