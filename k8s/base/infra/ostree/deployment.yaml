---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: ostree
    app.kubernetes.io/name: ostree
  annotations:
    configmap.reloader.stakater.com/reload: "ostree-nginx-conf"
  name: ostree-repo
  namespace: infra
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: ostree
      app.kubernetes.io/name: ostree
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ostree
        app.kubernetes.io/name: ostree
    spec:
      initContainers:
      - command:
          - /bin/bash
          - -c
          - |-
            REMOTE="$(skopeo inspect docker://registry.gitlab.com/fedora/sigs/sway/ostree-config:rawhide | jq '.Labels."ostree.commit"' | sed 's/"//g')"
            LOCAL="$(ostree log --repo /data fedora/rawhide/x86_64/sway | head -n 1 | grep commit | sed 's/commit //g' )"
            echo remote: $REMOTE
            echo local: $LOCAL
            if [ "$LOCAL" = "$REMOTE" ]; then
              echo "rawhide sway refs up-to-date"
            else
              ostree init --mode=bare --repo=./repo
              ostree container unencapsulate ostree-unverified-image:docker://registry.gitlab.com/fedora/sigs/sway/ostree-config:rawhide --repo=./repo --write-ref fedora/rawhide/x86_64/sway
              ostree pull-local --repo=/data ./repo
            fi
        image: ghcr.io/anthr76/kutara-ostree:latest@sha256:04d3429aaca5a67e81f8f7e26ed7aa43a3d092dda61d8513e3e6416a155b34b9
        imagePullPolicy: IfNotPresent
        name: update-ostree-rawhide
        securityContext:
          runAsUser: 0
          privileged: true
        volumeMounts:
        - mountPath: /data
          name: data
      - command:
          - /bin/bash
          - -c
          - |-
            REMOTE="$(skopeo inspect docker://registry.gitlab.com/fedora/sigs/sway/ostree-config:36 | jq '.Labels."ostree.commit"' | sed 's/"//g')"
            LOCAL="$(ostree log --repo /data fedora/36/x86_64/sway | head -n 1 | grep commit | sed 's/commit //g' )"
            echo remote: $REMOTE
            echo local: $LOCAL
            if [ "$LOCAL" = "$REMOTE" ]; then
              echo "f36 sway refs up-to-date"
            else
              ostree init --mode=bare --repo=./repo
              ostree container unencapsulate ostree-unverified-image:docker://registry.gitlab.com/fedora/sigs/sway/ostree-config:36 --repo=./repo --write-ref fedora/36/x86_64/sway
              ostree pull-local --repo=/data ./repo
            fi
        image: ghcr.io/anthr76/kutara-ostree:latest@sha256:04d3429aaca5a67e81f8f7e26ed7aa43a3d092dda61d8513e3e6416a155b34b9
        imagePullPolicy: IfNotPresent
        name: update-ostree-f36
        securityContext:
          runAsUser: 0
          privileged: true
        volumeMounts:
        - mountPath: /data
          name: data
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: feature.node.kubernetes.io/custom-intel-10g
                operator: In
                values:
                - "true"
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ostree
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - ostree
              topologyKey: kubernetes.io/hostname
            weight: 100
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: nginx-exporter
          image: docker.io/nginx/nginx-prometheus-exporter:0.10.0@sha256:1c6eba17d7768401ba1ed056101fc56ec3e3b5c82e508fdd8968fbcd96ec9574
          args:
            - "-nginx.scrape-uri=http://localhost:8090/basic_status"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 9113
            timeoutSeconds: 1
          ports:
            - containerPort: 9113
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9113
            timeoutSeconds: 1
          resources:
            limits:
              memory: 200Mi
              cpu: 128m
            requests:
              cpu: 64m
              memory: 64Mi
          startupProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 9113
            timeoutSeconds: 1
        - name: nginx
          image: "docker.io/nginxinc/nginx-unprivileged:alpinee@sha256:fd3ae9756f463323cffbdc7a4acc01f2322d535f50bab15b5eb3b14b2323a35b"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8090
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]
          resources:
            limits:
              memory: 512Mi
              cpu: 1000m
            requests:
              cpu: 256m
              memory: 128Mi
          startupProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              readOnly: true
              name: data
            - mountPath: /etc/nginx/conf.d
              readOnly: true
              name: nginx-conf
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ostree-repo
        - name: nginx-conf
          configMap:
            name: ostree-nginx-conf
