---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
  namespace: infra
  labels:
    component.kutara.io/part-of: standard-helm-release
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controller:
      strategy: RollingUpdate
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.8@sha256:0141cf427c47f2d534711a3f9e8c5f9008bc6b585463ccd9288cf0f027e20deb
        env:
          - name: POSTGRES_HOST
            value: postgres-rw.database.svc.cluster.local
          - name: POSTGRES_DB
            value: "paperless"
          - name: POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: postgres-superuser
                key: password
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: paperless
                key: PAPERLESS_DBUSER
          - name: POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: paperless
                key: PAPERLESS_DBPASS
    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 2.18.4@sha256:3421ebe06ed27662d014046cf5089e612de853aae0c676a2bc72f73b38080e57
    env:
      COMPOSE_PROJECT_NAME: paperless
      PAPERLESS_TASK_WORKERS: 2
      PAPERLESS_REDIS: redis://redis-master.database.svc.cluster.local:6379
      PAPERLESS_DBHOST: postgres-rw.database.svc.cluster.local
      PAPERLESS_TIME_ZONE: America/New_York
      PAPERLESS_ENABLE_HTTP_REMOTE_USER: true
      PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTH_REQUEST_EMAIL
      PAPERLESS_PORT: 8000
      PAPERLESS_OCR_LANGUAGE: eng
      USERMAP_GID: 65534
      USERMAP_UID: 65534
      PAPERLESS_URL: https://paperless.scr1.rabbito.tech
    envFrom:
      - secretRef:
          name: paperless
    persistence:
      data:
        enabled: true
        existingClaim: paperless-data-v2
        mountPath: /usr/src/paperless/data
      media:
        enabled: true
        existingClaim: paperless-media-v2
        mountPath: /usr/src/paperless/media
      consume:
        enabled: true
        existingClaim: paperless-consume-v2
        mountPath: /usr/src/paperless/consume
      export:
        enabled: true
        existingClaim: paperless-export-v2
        mountPath: /usr/src/paperless/export
#    podSecurityContext:
#      runAsUser: 65534
#      runAsGroup: 65534
#      fsGroup: 65534
#      fsGroupChangePolicy: "OnRootMismatch"
    service:
      main:
        ports:
          http:
            port: 8000
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          # TODO: https://github.com/kubernetes/ingress-nginx/issues/8401#issuecomment-1159590536
          nginx.ingress.kubernetes.io/custom-http-errors: 401,403,404,500,501,502,503
          nginx.ingress.kubernetes.io/auth-response-headers: Authorization, x-auth-request-email,
            x-auth-request-groups
          nginx.ingress.kubernetes.io/auth-signin: https://auth.scr1.rabbito.tech/oauth2/start
          nginx.ingress.kubernetes.io/auth-url: https://auth.scr1.rabbito.tech/oauth2/auth?allowed_groups=family
          hajimari.io/enable: "true"
          hajimari.io/icon: file-outline
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
        hosts:
          - host: &host "paperless.scr1.rabbito.tech"
            paths:
              - path: /
        tls:
          - secretName: paperless-int-tls
            hosts:
              - *host
    resources:
      requests:
        cpu: 200m
        memory: 128Mi
      limits:
        cpu: 2500m
        memory: 6500Mi
