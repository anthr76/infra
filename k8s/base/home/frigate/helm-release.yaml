---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home
  labels:
    component.kutara.io/part-of: standard-helm-release
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: mosquitto
      namespace: home
  values:
    image:
      repository: ghcr.io/blakeblackshear/frigate
      tag: 0.12.0-beta8
    env:
      LIBVA_DRIVER_NAME: radeonsi
      FRIGATE_MQTT_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: frigate
            key: mqtt-password
    service:
      main:
        ports:
          http:
            port: &port 5000
    probes:
      liveness: &probe
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness:
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      startup:
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          failureThreshold: 30
          periodSeconds: 10
    persistence:
      data:
        enabled: true
        existingClaim: frigate-config-v3
        mountPath: /data
      media:
        enabled: true
        existingClaim: frigate-media-v2
        mountPath: /media
      config:
        enabled: true
        type: configMap
        name: frigate
        subPath: config.yaml
        mountPath: /config/config.yml
        readOnly: true
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        mountPath: /dev/shm
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          # TODO: https://github.com/kubernetes/ingress-nginx/issues/8401#issuecomment-1159590536
          nginx.ingress.kubernetes.io/custom-http-errors: 401,403,404,500,501,502,503
          nginx.ingress.kubernetes.io/auth-response-headers: Authorization, x-auth-request-email,
            x-auth-request-groups
          nginx.ingress.kubernetes.io/auth-signin: https://auth.kutara.io/oauth2/start
          nginx.ingress.kubernetes.io/auth-url: https://auth.kutara.io/oauth2/auth?allowed_groups=family
          hajimari.io/enable: "true"
          hajimari.io/icon: cctv
        hosts:
          - host: "frigate.scr1.kutara.io"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: frigate-tls
            hosts:
              - "frigate.scr1.kutara.io"
    podAnnotations:
      configmap.reloader.stakater.com/reload: "frigate-config"
      secret.reloader.stakater.com/reload: "frigate-secrets"
    securityContext:
      privileged: true
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-coral-tpu
                  operator: In
                  values:
                    - "true"
    resources:
      requests:
        amd.com/gpu: 1
        cpu: 200m
        memory: 400Mi
      limits:
        memory: 1000Mi
        cpu: 1000m
        amd.com/gpu: 1
