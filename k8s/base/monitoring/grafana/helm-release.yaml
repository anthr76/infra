---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
  labels:
    component.kutara.io/part-of: standard-helm-release
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: 6.59.0
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-initdb:14.8@sha256:0141cf427c47f2d534711a3f9e8c5f9008bc6b585463ccd9288cf0f027e20deb
        env:
          - name: POSTGRES_HOST
            value: postgres-rw.database.svc.cluster.local
          - name: POSTGRES_DB
            value: "grafana"
          - name: POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: postgres-superuser
                key: password
          - name: POSTGRES_USER
            value: grafana
          - name: POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: grafana
                key: GF_DATABASE_PASSWORD
    resources:
      limits:
        cpu: 800m
        memory: 850Mi
      requests:
        cpu: 100m
        memory: 128Mi
    replicas: 2
    envFromSecret: "grafana"
    admin:
      existingSecret: grafana
      passwordKey: GF_SECURITY_ADMIN_PASSWORD
      userKey: GF_SECURITY_ADMIN_USERNAME
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_SECOND: "hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_MINUTE: "hh:mm a"
      GF_DATE_FORMATS_INTERVAL_HOUR: "DD/MM hh:mm a"
      GF_DATE_FORMATS_INTERVAL_DAY: "DD/MM"
      GF_DATE_FORMATS_INTERVAL_MONTH: "MM-YYYY"
      GF_DATE_FORMATS_INTERVAL_YEAR: "YYYY"
    grafana.ini:
      server:
        root_url: "https://grafana.kutara.io"
        serve_from_sub_path: false
      auth:
        oauth_auto_login: true
      auth.generic_oauth:
        enabled: true
        allow_sign_up: true
        name: Auth0
        scopes: openid profile email
        auth_url: https://kutara-dev.us.auth0.com/authorize
        token_url: https://kutara-dev.us.auth0.com/oauth/token
        api_url: https://kutara-dev.us.auth0.com/userinfo
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: contains("https://kutara.io/groups"[*], 'admins') && 'Admin' || contains("https://kutara.io/groups"[*], 'editor') && 'Editor' || 'Viewer'
        org_id: 1
      auth.basic:
        enabled: true
      auth.anonymous:
        enabled: false
      plugins:
        enable_alpha: true
      analytics:
        check_for_updates: false
      database:
        type: postgres
        user: grafana
        host: postgres-rw.database.svc.cluster.local
        name: grafana
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Mimir
            type: prometheus
            access: proxy
            orgId: 1
            url: http://mimir-nginx:80/prometheus
            version: 1
            editable: true
            jsonData:
              httpHeaderName1: "X-Scope-OrgID"
              alertmanagerUid: "alertmanager"
            isDefault: true
          - name: Mimir Alertmanager
            uid: alertmanager
            type: alertmanager
            access: proxy
            orgId: 1
            url: http://mimir-nginx:80/alertmanager
            version: 1
            editable: true
            jsonData:
              httpHeaderName1: "X-Scope-OrgID"
              implementation: "cortex"
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway:80
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        hajimari.io/enable: "true"
        hajimari.io/icon: chart-areaspline
      hosts:
        - "grafana.kutara.io"
      tls:
        - secretName: grafana-tls
          hosts:
            - "grafana.kutara.io"
    serviceAccount:
      create: true
      autoMount: true
    persistence:
      enabled: false
