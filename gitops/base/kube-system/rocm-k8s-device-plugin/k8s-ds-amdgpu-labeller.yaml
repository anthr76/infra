---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: amd-gpu-labeller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: amd-gpu-labeller
  namepsace: kube-system
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["watch", "get", "list", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: amd-gpu-labeller
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: amd-gpu-labeller
subjects:
  - kind: ServiceAccount
    name: amd-gpu-labeller
    namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: amd-gpu-labeller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: amd-gpu-labeller
  template:
    metadata:
      labels:
        name: amd-gpu-labeller
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: amd-gpu-labeller
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - image: docker.io/rocm/k8s-device-plugin:labeller-1.18.0
          name: amd-gpu-labeller
          imagePullPolicy: Always
          workingDir: /root
          command: ["./k8s-node-labeller"]
          args: ["-vram", "-cu-count", "-simd-count", "-device-id", "-family"]
          env:
            - name: DS_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            - name: sys
              mountPath: /sys
            - name: dev
              mountPath: /dev
      volumes:
        - name: sys
          hostPath:
            path: /sys
        - name: dev
          hostPath:
            path: /dev
