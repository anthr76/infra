prometheus:
  thanosService:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/service.serversscheme: h2c
  thanosServiceMonitor:
    enabled: true
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: "web, websecure"
      cert-manager.io/cluster-issuer: letsencrypt-production
    hosts:
      - "prom.${GENERIC_CLUSTER_INGRESS}"
    tls:
      - secretName: prometheus-tls
        hosts:
          - "prom.${GENERIC_CLUSTER_INGRESS}"
  prometheusSpec:
    externalUrl: "https://prom.${GENERIC_CLUSTER_INGRESS}"
    routePrefix: "/"
    externalLabels:
      cluster: ${CLUSTER_NAME}
    replicaExternalLabelName: "replica"
    replicas: 3
    ruleSelector: {}
    ruleNamespaceSelector: {}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    retention: 2d
    enableAdminAPI: true
    walCompression: true
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
    thanos:
      image: docker.io/raspbernetes/thanos:v0.22.0
      version: v0.22.0
      objectStorageConfig:
        name: thanos-objstore-secret
        key: objstore.yml
    additionalScrapeConfigs:
      - job_name: "node-exporter"
        honor_timestamps: true
        static_configs:
          - targets:
              - fw-1.${INT_DOMAIN}:9100
              - nas-1.${INT_DOMAIN}:9100
      - job_name: "vyos-coredns"
        static_configs:
          - targets:
              - 10.5.0.7:9153
              - 10.5.0.8:9153
