---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cilium
  namespace: kube-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://helm.cilium.io/
      chart: cilium
      version: 1.10.0-rc0
      sourceRef:
        kind: HelmRepository
        name: cilium-charts
        namespace: flux-system
      interval: 5m
  values:
    cluster:
      # -- Name of the cluster. Only required for Cluster Mesh.
      name: "${CLUSTER_NAME}"
      # -- (int) Unique ID of the cluster. Must be unique across all connected
      # clusters and in the range of 1 to 255. Only required for Cluster Mesh.
      id: "${CLUSTER_ID}"
    # -- Specify the CIDR for native routing (ie to avoid IP masquerade for).
    # This value corresponds to the configured cluster-cidr.
    nativeRoutingCIDR: "${NATIVE_ROUTING_CIDR}"
    bpf:
      # -- Enable native IP masquerade support in eBPF
      masquerade: true
      # -- Configure whether direct routing mode should route traffic via
      # host stack (true) or directly and more efficiently out of BPF (false) if
      # the kernel supports it. The latter has the implication that it will also
      # bypass netfilter in the host namespace.
      hostRouting: false
      # -- Configure the eBPF-based TPROXY to reduce reliance on iptables rules
      # for implementing Layer 7 policy.
      tproxy: true
      # -- Configure the FIB lookup bypass optimization for nodeport reverse
      # NAT handling.
      lbBypassFIBLookup: true
    # -- Configure the kube-proxy replacement in Cilium BPF datapath
    # Valid options are "disabled", "probe", "partial", "strict".
    # ref: https://docs.cilium.io/en/stable/gettingstarted/kubeproxy-free/
    kubeProxyReplacement: "strict"
    kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256
    k8sServiceHost: "${CONTROL_PLANE_ENDPOINT}"
    k8sServicePort: 6443
    # -- Configure service load balancing
    loadBalancer:
      # algorithm is the name of the load balancing algorithm for backend
      # selection e.g. random or maglev
      algorithm: "maglev"
      # mode is the operation mode of load balancing for remote backends
      # e.g. snat, dsr, hybrid
      mode: "dsr"
    # -- Configure the encapsulation configuration for communication between nodes.
    # Possible values:
    #   - disabled
    #   - vxlan (default)
    #   - geneve
    tunnel: "disabled"
    # -- Enable installation of PodCIDR routes between worker
    # nodes if worker nodes share a common L2 network segment.
    autoDirectNodeRoutes: true
    ipam:
      operator:
        clusterPoolIPv4PodCIDR: "${CLUSTER_POD_CIDR}"
        clusterPoolIPv4MaskSize: 24
