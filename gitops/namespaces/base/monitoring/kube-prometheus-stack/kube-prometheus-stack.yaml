---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 16.1.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 10m
  test:
    enable: false # Enable helm test
  install:
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  dependsOn:
  - name: sealed-secrets
    namespace: kube-system
  - name: thanos
    namespace: monitoring
  timeout: 20m
  values:
    fullnameOverride: x
    server:
      resources:
        requests:
          memory: 1000Mi
          cpu: 25m
        limits:
          memory: 2000Mi
    prometheusOperator:
      createCustomResource: true
    # Disable kubeProxy whilst using Cilium as it's not deployed
    kubeProxy:
      enabled: false
    # Disabling until TLS is sorted
    kubeEtcd:
      enabled: false
      service:
        port: 2379
        targetPort: 2379
      serviceMonitor:
        scheme: https
    kubeControllerManager:
      service:
        port: 10257
        targetPort: 10257
      serviceMonitor:
        https: true
        insecureSkipVerify: true
    kubeScheduler:
      service:
        port: 10259
        targetPort: 10259
      serviceMonitor:
        https: true
        insecureSkipVerify: true
    alertmanager:
      enabled: false
      fullnameOverride: alertmanager
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: traefik-internal@kubernetescrd
        hosts:
        - "alert-manager.k8s.rabbito.tech"
        tls:
        - secretName: "rabbito-tech-tls"
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "openebs-cstor-sparse"
              resources:
                requests:
                  storage: 10Gi
    grafana:
      enabled: false
      fullnameOverride: grafana
      persistence:
        enabled: false
        storageClassName: "openebs-cstor-sparse"
        size: 10Gi
        accessModes:
        - ReadWriteOnce
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          #external-dns.alpha.kubernetes.io/target: nwk1.kutara.io
        hosts:
        - "grafana.kutara.io"
        tls:
        - secretName: "rabbito-tech-tls"
      sidecar:
        datasources:
          enabled: true
          # Disable for thanos
          defaultDatasourceEnabled: false
        dashboards:
          enabled: true
          searchNamespace: ALL
      plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            allowUiUpdates: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          cert-manager:
            url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/raw/master/dashboards/cert-manager.json
            datasource: Prometheus
          cilium-dashboard:
            url: https://grafana.com/api/dashboards/13537/revisions/1/download
            datasource: Prometheus
          cilium-operator-dashboard:
            url: https://grafana.com/api/dashboards/13538/revisions/1/download
            datasource: Prometheus
          hubble-dashboard:
            url: https://grafana.com/api/dashboards/13539/revisions/1/download
            datasource: Prometheus
          openebs:
            url: https://grafana.com/api/dashboards/12171/revisions/2/download
            datasource: Prometheus
          openebs-pg-dashboard:
            url: https://raw.githubusercontent.com/openebs/openebs/v2.3.0/k8s/openebs-pg-dashboard.json
            datasource: Prometheus
          sealed-secrets:
            url: https://raw.githubusercontent.com/bitnami-labs/sealed-secrets/master/contrib/prometheus-mixin/dashboards/sealed-secrets-controller.json
            datasource: Prometheus
          thanos-overview:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/overview.json
            datasource: Prometheus
          thanos-compact:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/compact.json
            datasource: Prometheus
          thanos-querier:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/query.json
            datasource: Prometheus
          thanos-store:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/store.json
            datasource: Prometheus
          thanos-receiver:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/receive.json
            datasource: Prometheus
          thanos-sidecar:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/sidecar.json
            datasource: Prometheus
          thanos-ruler:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/rule.json
            datasource: Prometheus
          thanos-replicate:
            url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/bucket-replicate.json
            datasource: Prometheus
          toolkit-cluster:
            url: https://raw.githubusercontent.com/fluxcd/toolkit/main/manifests/monitoring/grafana/dashboards/cluster.json
            datasource: Prometheus
          toolkit-control-plane:
            url: https://raw.githubusercontent.com/fluxcd/toolkit/main/manifests/monitoring/grafana/dashboards/control-plane.json
            datasource: Prometheus
          velero:
            url: https://grafana.com/api/dashboards/11055/revisions/2/download
            datasource: Prometheus
          traefik:
            url: https://grafana.com/api/dashboards/11462/revisions/1/download
            datasource: Prometheus
      additionalDataSources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://thanos-query-http:10902/
        isDefault: true
      - name: Loki
        type: loki
        access: proxy
        url: http://loki.monitoring.svc.cluster.local:3100
    prometheus:
      enabled: false
      fullnameOverride: prometheus
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: traefik-internal@kubernetescrd
        hosts:
        - "prometheus.k8s.rabbito.tech"
        tls:
        - secretName: "rabbito-tech-tls"
      prometheusSpec:
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 24h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "openebs-cstor-sparse"
              resources:
                requests:
                  storage: 10Gi
        thanos:
          image: docker.io/raspbernetes/thanos
          version: v0.17.2
          objectStorageConfig:
            name: thanos
            key: object-store.yaml
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      image:
        repository: docker.io/eddiezane/kube-state-metrics
        tag: v1.9.7
    prometheus-node-exporter:
      fullnameOverride: node-exporter
  valuesFrom:
  - kind: Secret
    name: "kube-prometheus-stack-helm-values"
