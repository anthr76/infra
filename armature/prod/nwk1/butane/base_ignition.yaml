---
variant: fcos
version: 1.3.0
passwd:
  users:
    - name: anthonyjrabbito
      groups:
        - wheel
        - sudo
      ssh_authorized_keys:
        - ${anthonyjrabbito_ssh_key}
    - name: core
      ssh_authorized_keys:
        - ${anthonyjrabbito_ssh_key}
storage:
  directories:
    - path: /var/data
      user:
        id: 1000
      group:
        id: 1000
    - path: /var/podman/netbootxyz
      user:
        id: 65534
      group:
        id: 65534
  files:
    - path: /etc/hostname
      mode: 0644
      overwrite: true
      contents:
        inline: ${hostname}
    - path: /etc/zincati/config.d/51-rollout-wariness.toml
      contents:
        inline: |
          [identity]
          rollout_wariness = 0.001
    - path: /etc/zincati/config.d/55-updates-strategy.toml
      contents:
        inline: |
          [updates]
          strategy = "periodic"
          [[updates.periodic.window]]
          days = [ "Sat", "Sun" ]
          start_time = "22:30"
          length_minutes = 60
    - path: /etc/caddy/Caddyfile
      contents:
        inline: |
          s3.nwk1.rabbito.tech {
                  reverse_proxy http://nas-1.nwk1.rabbito.tech:9000 {
                          header_up X-Forwarded-Host {host}
                          header_up Host {host}
                  }
                  tls {
                          protocols tls1.2 tls1.2
                          issuer zerossl {
                                  preferred_chains smallest
                                  dns cloudflare ${CF_API_KEY}
                                  email ${CF_EMAIL}
                          }
                  }
          }
          s3.nwk1.rabbito.tech:80 {
                  reverse_proxy http://nas-1.nwk1.rabbito.tech:9000 {
                          header_up X-Forwarded-Host {host}
                          header_up Host {host}
                  }
                  route /minio/* {
                          redir https://s3.nwk1.rabbito.tech/minio{uri}
                  }
          }
          netboot.nwk1.rabbito.tech {
                  reverse_proxy http://127.0.0.1:8080
                  tls {
                          protocols tls1.2 tls1.2
                          issuer acme {
                                  preferred_chains smallest
                                  dns cloudflare ${CF_API_KEY}
                                  email ${CF_EMAIL}
                          }
                  }
          }
          netboot.nwk1.rabbito.tech:80 {
                  reverse_proxy http://127.0.0.1:8080
                  tls {
                          dns cloudflare ${CF_API_KEY}
                  }
          }
    - path: /var/podman/netbootxyz/MAC-dca63203594d.ipxe
      contents:
        inline: |
          #!ipxe
          dhcp
          chain https://matchbox.nyc1.rabbito.tech/boot.ipxe
    - path: /var/podman/netbootxyz/MAC-a0369fffffff.ipxe
      contents:
        inline: |
          #!ipxe
          dhcp
          chain https://matchbox.nyc1.rabbito.tech/boot.ipxe
    - path: /var/podman/netbootxyz/MAC-90e2ba8c703a.ipxe
      contents:
        inline: |
          #!ipxe
          dhcp
          chain https://matchbox.nyc1.rabbito.tech/boot.ipxe
    - path: /var/podman/netbootxyz/MAC-90e2ba8c7498.ipxe
      contents:
        inline: |
          #!ipxe
          dhcp
          chain https://matchbox.nyc1.rabbito.tech/boot.ipxe
  links:
    - path: /etc/localtime
      target: ../usr/share/zoneinfo/America/New_York
systemd:
  units:
    - name: podman-caddy.service
      enabled: true
      contents: |
        [Unit]
        Description=Run caddy
        After=var-data.mount network-online.target
        Wants=network-online.target

        [Service]
        ExecStartPre=mkdir -p /var/lib/caddy
        ExecStartPre=-/bin/podman kill caddy
        ExecStartPre=-/bin/podman rm caddy
        ExecStartPre=-/bin/podman pull quay.io/kutara/caddy:latest
        ExecStart=/bin/podman run --name caddy --net=host \
                  -v /etc/caddy/Caddyfile:/config/Caddyfile:z \
                  -v /var/data:/data \
                  --user root \
                  quay.io/kutara/caddy:latest /caddy run --config /config/Caddyfile --adapter caddyfile
        ExecStop=/bin/podman stop caddy

        [Install]
        WantedBy=multi-user.target
    - name: podman-netbootxyz.service
      enabled: true
      contents: |
        [Unit]
        Description=Run netbootxyz
        After=var-data.mount network-online.target
        Wants=network-online.target

        [Service]
        ExecStartPre=-/bin/podman kill netbootxyz
        ExecStartPre=-/bin/podman rm netbootxyz
        ExecStartPre=-/bin/podman pull quay.io/kutara/netbootxyz:tls-fc3f059
        ExecStart=/bin/podman run --name netbootxyz -p 127.0.0.1:8080:8080 -p 69:69/udp -v /var/podman/netbootxyz:/config/menus/local:z \
                  quay.io/kutara/netbootxyz:tls-fc3f059
        ExecStop=/bin/podman stop netbootxyz

        [Install]
        WantedBy=multi-user.target
    - name: podman-dyndns.service
      enabled: true
      contents: |
        [Unit]
        Description=Run cloudflare DynDNS
        After=network-online.target
        Wants=network-online.target

        [Service]
        ExecStartPre=-/bin/podman kill cloudflare-ddns
        ExecStartPre=-/bin/podman rm cloudflare-ddns
        ExecStartPre=-/bin/podman pull docker.io/oznu/cloudflare-ddns:latest
        ExecStart=/bin/podman run --env SUBDOMAIN=lb-2.nwk1 --env ZONE=rabbito.tech \
                  --net=host --env API_KEY=${CF_API_KEY} --name cloudflare-ddns \
                  docker.io/oznu/cloudflare-ddns:latest
        ExecStop=/bin/podman stop cloudflare-ddns

        [Install]
        WantedBy=multi-user.target
    - name: rpm-ostree-install-qga.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer qemu-guest-agent with rpm-ostree
        # We run after `systemd-machine-id-commit.service` to ensure that
        # `ConditionFirstBoot=true` services won't rerun on the next boot.
        Before=zincati.service
        After=systemd-machine-id-commit.service
        After=network-online.target
        ConditionPathExists=!/var/lib/rpm-ostree-install-qga.stamp
        StartLimitInterval=1200s
        StartLimitBurst=5

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/rpm-ostree cancel
        ExecStart=/usr/bin/rpm-ostree install --allow-inactive qemu-guest-agent
        ExecStart=/bin/touch /var/lib/rpm-ostree-install-qga.stamp
        ExecStart=/bin/systemctl --no-block reboot
        Restart=on-failure
        RestartSec=120s

        [Install]
        WantedBy=multi-user.target
    - name: var-data.mount
      enabled: true
      contents: |
        [Unit]
        Description=Host container data mount
        [Mount]
        What=/host/data/
        Where=/var/data/
        Type=9p
        Options=trans=virtio,version=9p2000.L,rw
        [Install]
        WantedBy=multi-user.target
