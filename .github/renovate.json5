{
  "enabled": true,
  "timezone": "America/New_York",
  "semanticCommits": "enabled",
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "commitBody": "Signed-off-by: Anthony Rabbito <hello@anthonyrabbito.com>",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "commitMessageTopic": "{{depName}}",
  "commitMessageExtra": "to {{newVersion}}",
  "commitMessageSuffix": "",
  // set up Renovate Managers
  "helmv3": {
    "fileMatch": ["gitops/.+/Chart\\.yaml$"]
  },
  "helm-values": {
    "fileMatch": ["gitops/.+/helm-release\\.yaml$"]
  },
  "kubernetes": {
    "fileMatch": [
      "clusters/.+\\.yaml$",
      "gitops/.+\\.yaml$"
    ]
  },
  "regexManagers": [
    // regexManager to read and process HelmRelease files
    {
      "fileMatch": [
        "gitops/.+\\.yaml$"
      ],
      "matchStrings": [
        // helm releases
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    // Generic Flux Regex Manager
    {
      "fileMatch": [
        "clusters/.+\\.yaml$",
        "gitops/.+\\.yaml$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( registryUrl=(?<registryUrl>.*?))?( versioning=(?<versioning>.*=?))?\n *tag: (?<currentValue>.*=?)"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      "registryUrlTemplate": "{{#if registryUrl}}{{{registryUrl}}}{{else}}{{/if}}"
    }
  ],
  packageRules: [
    // setup datasources
    {
      "enabled": true,
      "matchDatasources": ["docker", "github-releases", "pypi", "npm", "repology"],
      "matchUpdateTypes": ["major", "minor", "patch"],
    },
    {
      "matchDatasources": ["docker", "github-releases", "pypi", "npm", "repology"],
      "semanticCommitScope": "deps",
      "separateMinorPatch": true
    },
    // add labels according to package and update types
    {
      "matchDatasources": ["docker", "github-releases", "pypi", "npm", "repology"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(deps): ",
      "labels": ["dep/major"]
    },
    {
      "matchDatasources": ["docker", "github-releases", "pypi", "npm", "repology"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "labels": ["dep/minor"]
    },
    {
      "matchDatasources": ["docker", "github-releases", "pypi", "npm", "repology"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "labels": ["dep/patch"]
    },
    // Custom version schemes
    {
      datasources: ["docker"],
      versionScheme: "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
      packageNames: ["blakeblackshear/frigate"],
    },
    // Pin package versions
    {
      datasources: ["docker"],
      allowedVersions: "<4.3.0",
      packageNames: ["k8sathome/qbittorrent"],
    },
    // Version strategies
    {
      datasources: ["docker"],
      versioning: "loose",
      packageNames: ["plexinc/pms-docker"],
    },
    // Enable auto-merge docker
    {
      datasources: ["docker"],
      automerge: true,
      requiredStatusChecks: null,
      updateTypes: ["minor", "patch"],
    },
    // Enable auto-merge helm
    {
      datasources: ["helm"],
      automerge: true,
      requiredStatusChecks: null,
      updateTypes: ["patch"],
    },
  ],
}
