---
- name: check if linger is enabled
  stat:
    path: "/var/lib/systemd/linger/{{ ansible_user }}"
  register: linger_enabled_file
  become: false

- name: enable linger
  command: "loginctl enable-linger {{ ansible_user }}"
  when: linger_enabled_file.stat.exists == false
  become: false

- name: install rootless packages
  ansible.builtin.package:
    name:
      - dbus-user-session
      - uidmap
    state: present
  become: true
  when: ansible_os_family == "Debian"

- name: enable dbus-user-session
  ansible.builtin.systemd:
    name: dbus
    state: started
    enabled: true
    scope: user
  become: false

- name: set ping sysctl
  ansible.posix.sysctl:
    name: net.ipv4.ping_group_range
    value: "0 2147483647"
    state: present
    reload: true
  become: true

- name: set rootfull ports for rootless user sysctl
  ansible.posix.sysctl:
    name: net.ipv4.ip_unprivileged_port_start
    value: "0"
    state: present
    reload: true
  become: true

- name: check if cgroupv2 is enabled
  stat:
    path: "/sys/fs/cgroup/cgroup.controllers"
  register: cgroupv2_enabled_file
  become: false

- name: enable cgroupv2
  ansible.builtin.replace:
    path: /etc/default/grub
    regexp: '^(GRUB_CMDLINE_LINUX=(?:(?![" ]{{ option | regex_escape }}=).)*)(?:[" ]{{ option | regex_escape }}=\S+)?(.*")$'
    replace: '\1 {{ option }}={{ value }}\2'
  vars:
    option: systemd.unified_cgroup_hierarchy
    value: 1
  when: cgroupv2_enabled_file.stat.exists == false
  notify: update grub

- name: ensure user delegate systemd directory exists
  ansible.builtin.file:
    path: /etc/systemd/system/user@.service.d
    state: directory

- name: install delegate.conf for rootless users
  ansible.builtin.copy:
    src: delegate.conf
    dest: "/etc/systemd/system/user@.service.d/delegate.conf"
  notify: reload systemd daemon
