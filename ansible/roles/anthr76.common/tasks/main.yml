---

- name: Add user to sudoers
  ansible.builtin.copy:
    content: "{{ ansible_user }} ALL=(ALL:ALL) NOPASSWD:ALL"
    dest: "/etc/sudoers.d/{{ ansible_user }}_nopasswd"
    mode: "0440"

- name: "add dominic as a user"
  ansible.builtin.user:
    name: dominicrabbito
    comment: Dominic Rabbito

- name: create utils user
  ansible.builtin.user:
    name: utils
    generate_ssh_key: yes
    ssh_key_type: ed25519
    ssh_key_file: .ssh/id_ed25519
    uid: 1002
    groups: sudo, anthonyjrabbito

- name: gather installed packages
  ansible.builtin.package_facts:
    manager: auto

- name: Enable universe repository
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
  loop:
    - "deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }} universe"
    - "deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-updates universe"
    - "deb http://security.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-security universe"
  when:
    - ansible_distribution == 'Ubuntu'

- name: install common packages
  ansible.builtin.apt:
    name: "{{ apt_install_packages }}"
    install_recommends: false
    update_cache: true
    cache_valid_time: 3600
    autoclean: true
    autoremove: true
  register: apt_install_common
  retries: 5
  until: apt_install_common is success
  when:
    - apt_install_packages is defined
    - apt_install_packages is iterable
    - apt_install_packages | length > 0
    - ansible_os_family == "Debian"

- name: remove bloat
  block:
    - name: check if snap is installed
      ansible.builtin.debug:
        msg: "snapd is installed"
      register: snapd_check
      when:
        - "'snapd' in apt_remove_packages"
        - "'snapd' in ansible_facts.packages"
    - name: remove snap packages
      ansible.builtin.command: snap remove {{ item }}
      loop:
        - lxd
        - core18
        - core20
        - snapd
      when:
        - "'snapd' in apt_remove_packages"
        - "'snapd' in ansible_facts.packages"
        - snapd_check.failed is defined
    - name: remove packages
      ansible.builtin.apt:
        name: "{{ apt_remove_packages }}"
        state: absent
        autoremove: true
    - name: remove files
      ansible.builtin.file:
        state: absent
        path: "{{ item }}"
      loop:
        - "/home/{{ ansible_user }}/.snap"
        - "/snap"
        - "/var/snap"
        - "/var/lib/snapd"
        - "/var/cache/snapd"
        - "/usr/lib/snapd"
      when:
        - "'snapd' in apt_remove_packages"
  when:
    - apt_remove_packages is defined
    - apt_remove_packages is iterable
    - apt_remove_packages | length > 0
    - ansible_distribution == 'Ubuntu'

- name: enable and start cockpit socket
  ansible.builtin.systemd:
    state: started
    enabled: yes
    name: cockpit.socket
  when: "'cockpit' in apt_install_packages"

- name: set timezone
  community.general.timezone:
    name: "{{ timezone | default('America/New_York') }}"

- name: disable swap at runtime
  ansible.builtin.command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: disable swap on boot
  ansible.posix.mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  loop:
    - swap
    - none
